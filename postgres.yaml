apiVersion: apps/v1
kind: Deployment
metadatation: 5
  labels:
    name: postgres
  name: postgres
  namesp8-2f2bonHistoryLimit: 10
  selector:
    matchLabels:
      service: postgres
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate      creationTimestamp: null
      labels:
        service: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: user
              name: postgres-credentials
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgres-credentials
        image: postgres:14-alpine
        imagePullPolicy: IfNotPresent
        name: postgres
        resources:
          limits:
            memory: 4Gi
          requests:
            memory: 500Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-volume-mount
          subPath: postgres
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: postgres-volume-mount

---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: postgres
  name: postgres
  namespace: default
spec:
  allocateLoadBalancerNodePorts: true
  ports:
  - nodePort: 32316
    port: 5433
    protocol: TCP
    targetPort: 5432
  selector:
    service: postgres
  sessionAffinity: None
  type: LoadBalancer

---
apiVersion: v1
data:
  password: YWRtaW4=
  user: YWRtaW4=
kind: Secret
meta9:47:31Z"
  name: postgres-credentials
  namespa-c46c3b83afec
type: Opaque
          
        persistentVolumeClaim:
          claimName: postgres-pvc